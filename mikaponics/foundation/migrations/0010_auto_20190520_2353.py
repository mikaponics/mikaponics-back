# Generated by Django 2.2.1 on 2019-05-20 23:53

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('foundation', '0009_remove_cropdatasheet_life_dict'),
    ]

    operations = [
        migrations.CreateModel(
            name='CropCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of', models.PositiveSmallIntegerField(choices=[(1, 'Humidity'), (2, 'Temperature'), (3, 'Total Volatile Organic Compound'), (4, 'Carbon Dioxide'), (5, 'Air Pressure'), (6, 'Altitude'), (7, 'pH'), (8, 'Electrical Conductivity'), (9, 'Oxidation-Reduction Potential'), (10, 'UV Light')], help_text='The type of instrument this is condition belongs to.', verbose_name='type of')),
                ('max_value', models.FloatField(help_text='The maximum value this crop can accept for this life-cycle stage.', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100)], verbose_name='Max Value')),
                ('min_value', models.FloatField(help_text='The minimum value this crop can accept for this life-cycle stage.', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100)], verbose_name='Max Value')),
                ('data_sheet', models.ForeignKey(help_text='The crop data-sheet this optimal grow condition belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='conditions', to='foundation.CropDataSheet')),
                ('stage', models.ForeignKey(help_text='The life cycle stage that this optimal grow condition belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='conditions', to='foundation.CropLifeCycleStage')),
            ],
            options={
                'verbose_name': 'Crop Condition',
                'verbose_name_plural': 'Crop Conditions',
                'db_table': 'mika_condition',
                'permissions': (),
                'default_permissions': (),
                'unique_together': {('data_sheet', 'stage', 'type_of')},
                'index_together': {('data_sheet', 'stage', 'type_of')},
            },
        ),
        migrations.DeleteModel(
            name='CropLifeSupportCondition',
        ),
    ]
